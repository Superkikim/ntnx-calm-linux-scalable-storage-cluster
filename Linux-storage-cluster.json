{"status":{},"contains_secrets":false,"product_version":"3.2.0","spec":{"description":"A scalable Linux environment for a cluster with shared volume","resources":{"client_attrs":{"91f40504_deployment":{"y":-165.8828862761,"x":-25.6674908432}},"service_definition_list":[{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"1_Get_Cluster_IP"},{"kind":"app_task","name":"2_Validate_pc_credentials"},{"kind":"app_task","name":"10_Parse_useful_IPs"},{"kind":"app_task","name":"11_Add_Private_Key"},{"kind":"app_task","name":"12_write_semaphore_file"},{"kind":"app_task","name":"20_Change_hostname"},{"kind":"app_task","name":"30_Change_root_password"},{"kind":"app_task","name":"40b_Setup_SSH"},{"kind":"app_task","name":"41b_Update_Match_directive"},{"kind":"app_task","name":"45_Add_nodes_to_vm0_hosts_file"},{"kind":"app_task","name":"46b_Distribute_new_hosts_file"},{"kind":"app_task","name":"50_Configure_sudo"},{"kind":"app_task","name":"65_Get_Nr_of_Nodes"},{"kind":"app_task","name":"70_Create_Application_Container"},{"kind":"app_task","name":"71_Get_Application_Container_UUID"},{"kind":"app_task","name":"72_Create_sharedvg"},{"kind":"app_task","name":"73_Get_sharedvg_UUID"},{"kind":"app_task","name":"74_Attach_sharedvg"},{"kind":"app_task","name":"75_Get_list_of_sharedvg_vmdisks_uuid"},{"kind":"app_task","name":"80_Create_localvg_vg"},{"kind":"app_task","name":"81_Get_localvg_UUID"},{"kind":"app_task","name":"82_Attach_localvg"},{"kind":"app_task","name":"83_Get_list_of_localvg_vmdisks_uuid"},{"kind":"app_task","name":"84_Create_localvg_filesystem"},{"kind":"app_task","name":"96_Add_hosts_to_known_hosts"},{"kind":"app_task","name":"97_Retrieve_Known_hosts_from_VM0"}],"name":"b759e7f6_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"10_Parse_useful_IPs"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"11_Add_Private_Key"}},{"from_task_reference":{"kind":"app_task","name":"11_Add_Private_Key"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"12_write_semaphore_file"}},{"from_task_reference":{"kind":"app_task","name":"20_Change_hostname"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"30_Change_root_password"}},{"from_task_reference":{"kind":"app_task","name":"30_Change_root_password"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"40b_Setup_SSH"}},{"from_task_reference":{"kind":"app_task","name":"40b_Setup_SSH"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"41b_Update_Match_directive"}},{"from_task_reference":{"kind":"app_task","name":"41b_Update_Match_directive"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"45_Add_nodes_to_vm0_hosts_file"}},{"from_task_reference":{"kind":"app_task","name":"45_Add_nodes_to_vm0_hosts_file"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"46b_Distribute_new_hosts_file"}},{"from_task_reference":{"kind":"app_task","name":"50_Configure_sudo"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"65_Get_Nr_of_Nodes"}},{"from_task_reference":{"kind":"app_task","name":"65_Get_Nr_of_Nodes"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"70_Create_Application_Container"}},{"from_task_reference":{"kind":"app_task","name":"70_Create_Application_Container"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"71_Get_Application_Container_UUID"}},{"from_task_reference":{"kind":"app_task","name":"71_Get_Application_Container_UUID"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"72_Create_sharedvg"}},{"from_task_reference":{"kind":"app_task","name":"72_Create_sharedvg"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"73_Get_sharedvg_UUID"}},{"from_task_reference":{"kind":"app_task","name":"73_Get_sharedvg_UUID"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"74_Attach_sharedvg"}},{"from_task_reference":{"kind":"app_task","name":"74_Attach_sharedvg"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"75_Get_list_of_sharedvg_vmdisks_uuid"}},{"from_task_reference":{"kind":"app_task","name":"75_Get_list_of_sharedvg_vmdisks_uuid"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"80_Create_localvg_vg"}},{"from_task_reference":{"kind":"app_task","name":"80_Create_localvg_vg"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"81_Get_localvg_UUID"}},{"from_task_reference":{"kind":"app_task","name":"81_Get_localvg_UUID"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"82_Attach_localvg"}},{"from_task_reference":{"kind":"app_task","name":"82_Attach_localvg"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"83_Get_list_of_localvg_vmdisks_uuid"}},{"from_task_reference":{"kind":"app_task","name":"83_Get_list_of_localvg_vmdisks_uuid"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"84_Create_localvg_filesystem"}},{"from_task_reference":{"kind":"app_task","name":"46b_Distribute_new_hosts_file"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"50_Configure_sudo"}},{"from_task_reference":{"kind":"app_task","name":"12_write_semaphore_file"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"20_Change_hostname"}},{"from_task_reference":{"kind":"app_task","name":"1_Get_Cluster_IP"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"2_Validate_pc_credentials"}},{"from_task_reference":{"kind":"app_task","name":"2_Validate_pc_credentials"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"10_Parse_useful_IPs"}},{"from_task_reference":{"kind":"app_task","name":"96_Add_hosts_to_known_hosts"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"97_Retrieve_Known_hosts_from_VM0"}},{"from_task_reference":{"kind":"app_task","name":"84_Create_localvg_filesystem"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"96_Add_hosts_to_known_hosts"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"1_Get_Cluster_IP","attrs":{"expected_response_params":[{"status":"SUCCESS","code":200,"type":""},{"status":"FAILURE","code":401,"type":""}],"request_body":"","headers":[],"url":"https:\/\/localhost:9440\/api\/nutanix\/v3\/clusters\/@@{platform.status.cluster_reference.uuid}@@","response_paths":{"cluster_ip":"$.spec.resources.network.external_ip"},"retry_interval":1,"method":"GET","retry_count":1,"authentication":{"type":"basic_with_cred","credential_local_reference":{"kind":"app_credential","name":"pc_cred"}},"tls_verify":false,"content_type":"application\/json","connection_timeout":120,"type":"","proxy_type":""},"timeout_secs":"0","type":"HTTP","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"2_Validate_pc_credentials","attrs":{"expected_response_params":[{"status":"SUCCESS","code":200,"type":""},{"status":"FAILURE","code":401,"type":""},{"status":"FAILURE","code":403,"type":""}],"request_body":"","headers":[],"url":"https:\/\/@@{cluster_ip}@@:9440\/api\/nutanix\/v3\/users\/me","response_paths":{},"retry_interval":1,"method":"GET","retry_count":1,"authentication":{"type":"basic_with_cred","credential_local_reference":{"kind":"app_credential","name":"pe_cred"}},"tls_verify":false,"content_type":"text\/html","connection_timeout":120,"type":"","proxy_type":""},"timeout_secs":"0","type":"HTTP","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"10_Parse_useful_IPs","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Name:        10_Parse_useful_IPs\n# Type:        Set Variable\n# Variables:   public_ip (string) Public IP of the virtual machine,\n#                                 used for firewall lockdown\n#              pc_ip (string)     Prism Central IP used for API calls in bash\n# Script Type: Shell\n# Description: \n\n# Script:\n\n# Stop the script if any error a raised\nset -ex\n\n# Get the public IP address used to access the internet\ncurrentip=`wget --no-check-certificate -q checkip.dyndns.org -O index.html && cat index.html|cut -d ' ' -f 6 | cut -d '<' -f 1`\n\n# Get Prism Central IP address\npcip=\"${SSH_CLIENT%% *}\"\n\n# Pass variables to Calm\necho \"public_ip = $currentip\"\necho \"pc_ip = $pcip\"\n","eval_variables":["public_ip","pc_ip"],"eval_scope":"local","script_type":"sh","type":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"11_Add_Private_Key","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        11_Add_Private_Key\n# Type:        Execute\n# Script Type: Shell\n# Description: Write private key for centos and root users. Add public key to\n#              root to allow root to connect without password\n\n# Script:\n\n# Stop if any error is raised\nset -ex\n\n# Save the admin private key to the admin user ssh folder\necho -e \"@@{admin_cred.secret}@@\" | tee .ssh\/id_rsa\nchmod 0600 .ssh\/id_rsa\n\n# Save the admin private key to the root ssh folder\necho -e \"@@{admin_cred.secret}@@\" | sudo tee \/root\/.ssh\/id_rsa\nsudo chmod 0600 \/root\/.ssh\/id_rsa\n\n# Add the public key to the root ssh authorized keys\necho \"@@{ssh_key}@@\" | sudo tee -a \/root\/.ssh\/authorized_keys\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"12_write_semaphore_file","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        12_write_semaphore_file\n# Type:        Execute\n# Script Type: Shell\n# Description: This script write a semaphore files on nodes spawn at 1st\n#              launch. This allow to differentiate from scaled out nodes, i.e.\n#              to update hosts file or sshd_config file\n# Script:\n\n# Stop if any error is raised\nset -ex\n\n# If the VM is vm0, create a semaphore file on all VMs. This will indicates\n# these VMs were created during 1st blueprint launch\nif [ @@{calm_array_index}@@ -eq 0 ]\nthen\n  ips=($(echo \"@@{calm_array_address}@@\" | tr \",\" \" \"))\n\n  #Get number of replicas\n  nr_of_ips=${#ips[@]}\n\n  mkdir changes\n  touch changes\/semaphore\n\n  # Create semaphore on all existing VMs from the calm_array\n  for index in $(seq 0 $(expr $nr_of_ips - 1))\n    do\n      case $index in\n        0)\n          echo \"This is the 1st VM. Nothing to do\"\n        ;;\n        *)\n          ssh -o StrictHostKeyChecking=no ${ips[$index]} \"mkdir changes;touch changes\/semaphore\"\n        ;;\n      esac\n    done\n  fi\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"20_Change_hostname","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        20_Change_hostname\n# Type:        Execute\n# Script Type: Shell\n# Description: Set the hostname to the Calm VM Name\n\n# Script:\n\nset -ex\n\nsudo hostnamectl set-hostname @@{name}@@\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"30_Change_root_password","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        30_Change_root_password\n# Type:        Execute\n# Script Type: Shell\n# Description: Change the root password for the VM\n\n# Script:\n\nset -ex\n\necho '@@{rootpassword}@@' | sudo passwd root --stdin\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"40b_Setup_SSH","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        40_Setup_SSH\n# Type:        Execute\n# Script Type: Shell\n# Description: Configure SSH to secure access to the VM to users in the\n#              specified group only, and prevent ssh root login except from\n#              VMs deployed from the same blueprint\n\n# Script:\n\nset -ex\n\necho Create ssh group\nsudo groupadd @@{sshgroup}@@\n\necho add new user to ssh group\nsudo usermod -aG @@{sshgroup}@@ @@{admin_cred.username}@@\n\necho Disable ssh root login\nsudo sed -i 's\/#PermitRootLogin yes\/PermitRootLogin no\/g' \/etc\/ssh\/sshd_config\n\necho Disable ssh password authentication\nsudo sed -i 's\/PasswordAuthentication yes\/PasswordAuthentication no\/g' \/etc\/ssh\/sshd_config\n\necho Allow only members of ssh group to login using ssh\necho 'AllowGroups @@{sshgroup}@@' | sudo tee -a \/etc\/ssh\/sshd_config\n\n# Create GPFS Match Directive\n\nsudo sed '\/GPFS\/q' \/etc\/ssh\/sshd_config | sudo tee -a \/etc\/ssh\/sshd_config.new\nsudo mv \/etc\/ssh\/sshd_config.new \/etc\/ssh\/sshd_config\necho \"# Cluster Address Directive\" | sudo tee -a \/etc\/ssh\/sshd_config\n\n\n# March 2021 16th: Due to a bug, if VM is added as scale out action, th script needs to be run differenty. Therefore\n# If the samaphore file does not exist (VM created subsenquently with Scale Out action), calm_array_address is missing\n# new VM IP which needs to be added... This has to be removed when the bug is fixed\n\nif ! [ -f \/home\/@@{admin_cred.username}@@\/changes\/semaphore ]\n  then\n\techo \"Match Address @@{calm_array_address}@@,@@{address}@@\" | sudo tee -a \/etc\/ssh\/sshd_config\n\techo \"PermitRootLogin without-password\" | sudo tee -a \/etc\/ssh\/sshd_config\n  else\n\techo \"Match Address @@{calm_array_address}@@\" | sudo tee -a \/etc\/ssh\/sshd_config\n\techo \"PermitRootLogin without-password\" | sudo tee -a \/etc\/ssh\/sshd_config\nfi\n\n\n\nsudo service sshd restart\n    ","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"41b_Update_Match_directive","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        41_Update_Match_directive\n# Type:        Execute\n# Script Type: Shell\n# Description: Loop all the VM to correct the directive if required\n\n# Script:\n\n# March 2021 16th: Due to a bug, if VM is added as scale out action, th script needs to be run differenty. Therefore\n# If the samaphore file does not exist (VM created subsenquently with Scale Out action), calm_array_address is missing\n# new VM IP which needs to be added... This has to be removed when the bug is fixed\n\nif ! [ -f \/home\/@@{admin_cred.username}@@\/changes\/semaphore ]\n  then\n    ips=($(echo \"@@{calm_array_address}@@,@@{address}@@\" | tr \",\" \" \"))\n\n    #Get number of replicas\n    nr_of_ips=${#ips[@]}\n\n    # Push hosts file to other VMs\n    for index in $(seq 0 $(expr $nr_of_ips - 1))\n      do\n        case $index in\n          @@{calm_array_index}@@)\n          echo \"This is the current VM. nothing to do\"\n          ;;\n          *)\n          ssh -o StrictHostKeyChecking=no ${ips[$index]} \"sudo scp -o StrictHostKeyChecking=no @@{address}@@:\/etc\/ssh\/sshd_config \/etc\/ssh\/sshd_config;sudo service sshd restart;echo ${ips[$index]} file:;tail -n4 \/etc\/ssh\/sshd_config\"\n          ;;\n        esac\n      done\nfi\n\n# Tail sshd_config for troubleshooting purpose\ntail -n4 \/etc\/ssh\/sshd_config\n\t","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"45_Add_nodes_to_vm0_hosts_file","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        45_Add_nodes_to_vm0_hosts_file\n# Type:        Execute\n# Script Type: Shell\n# Description: Connect to VM 0 and add the host to the host files\n#              This might be replaced by registering the node in DNS instead\n\n# Script:\n\nset -ex\n\n# Add host to vm 0 hosts file\nssh -o StrictHostKeyChecking=no @@{calm_array_address[0]}@@ 'echo -e \"@@{address}@@\\t@@{name}@@\" | sudo tee -a \/etc\/hosts'\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"46b_Distribute_new_hosts_file","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        46b_Distribute_new_hosts_file\n# Type:        Execute\n# Script Type: Shell\n#Description:  distribute the hosts files from vm 0 to all VMs deployed by the\n#              blueprint. Would not be necessary if previous script registers\n#              VMs to the DNS\n\n# Script:\n\n# ADDRESS ARRAY BUG, LINE 29: # March 2021 16th\n\n# March 2021 16th: Due to a bug, if VM is added as scale out action, th script needs to be run differenty. Therefore\n# If the samaphore file does not exist (VM created subsenquently with Scale Out action), calm_array_address is missing\n# new VM IP which needs to be added... This has to be removed when the bug is fixed\n\n\nset -ex\n\n# Get hosts file from vm0\nsudo scp -o StrictHostKeyChecking=no @@{calm_array_address[0]}@@:\/etc\/hosts \/etc\/\n\nif ! [ -f \/home\/@@{admin_cred.username}@@\/changes\/semaphore ]\n  then\n    # Get VMs IPs\n    ips=($(echo \"@@{calm_array_address}@@,@@{address}@@\" | tr \",\" \" \"))\n\n    #Get number of replicas\n    nr_of_ips=${#ips[@]}\n\n    # Push hosts file to other VMs\n    for index in $(seq 0 $(expr $nr_of_ips - 1))\n    do\n      case $index in\n        0)\n          echo \"This is the 1st VM. Nothing to do\"\n        ;;\n        @@{calm_array_index}@@)\n          echo \"This is the current VM. nothing to do\"\n        ;;\n        *)\n          sudo scp -o StrictHostKeyChecking=no \/etc\/hosts ${ips[$index]}:\/etc\/hosts\n        ;;\n      esac\n    done\nfi\n# Display hosts file for troubleshooting purpose\ncat \/etc\/hosts\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"50_Configure_sudo","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        50_Configure_sudo\n# Type:        Execute\n# Script Type: Shell\n# Description: Configure SUDO to secure VM access as root. Forbid user to use su\n#              or alternative shells, and visudo.\n\n# Script:\n\nset -ex\n\necho Create sudo file for new user\n\n# We add command alias that we will block preventing users to run interactive\n# shells or to switch to root. This garantees tracking of user activity\n# Only the admin user will be able to run any command without password only from\n# localhost and except commands in NSHELLS and NSU alliases\n\nsudo touch \/etc\/sudoers.d\/@@{admin_cred.username}@@\necho \"Cmnd_Alias NSHELLS = \/bin\/sh, \/bin\/bash, \/sbin\/nologin, \/bin\/tcsh, \/bin\/csh, \/bin\/zsh, \/bin\/ksh, \/usr\/sbin\/visudo\" | sudo tee -a \/etc\/sudoers.d\/@@{admin_cred.username}@@\necho \"Cmnd_Alias NSU = \/bin\/su\" | sudo tee -a \/etc\/sudoers.d\/@@{admin_cred.username}@@\necho \"@@{admin_cred.username}@@ `hostname` = NOPASSWD:ALL, !NSHELLS, !NSU\"  | sudo tee -a \/etc\/sudoers.d\/@@{admin_cred.username}@@\n\necho Checking sudo file for troubleshooting purpose\nsudo cat \/etc\/sudoers.d\/@@{admin_cred.username}@@\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"65_Get_Nr_of_Nodes","attrs":{"exit_status":[],"script":"# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        65_Get_Nr_of_Nodes\n# Type:        Set Variable\n# Variable:    nr_of_nodes (Integer)  Nr of nodes in the cluster\n# Script Type: eScript\n# Description: Get number of nodes in the target cluster\n\n# Script:\n\npayload = {}\n\napi_url = 'https:\/\/@@{pc_ip}@@:9440\/api\/nutanix\/v3\/clusters\/@@{platform.status.cluster_reference.uuid}@@'\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='GET', auth=\"BASIC\", user='@@{pc_cred.username}@@', passwd='@@{pc_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n\nprint('nr_of_nodes = %s') % str(len(resp['status']['resources']['nodes']['hypervisor_server_list'])-1)","eval_variables":["nr_of_nodes"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"70_Create_Application_Container","attrs":{"script":"# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        70_Create_Application_Container\n# Type:        Execute\n# Script Type: eScript\n# Description: If vm 0, created a new storage container to host the volume\n#              for the application\n\nif @@{calm_array_index}@@ != 0:\n  print(\"Not VM 0\")\n  exit(0)\n\npayload = {\n  \"compression_delay_in_secs\": 0,\n  \"compression_enabled\": \"true\",\n  \"replication_factor\": 2,\n  \"name\": \"@@{calm_application_name}@@\"\n}\n\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/PrismGateway\/services\/rest\/v2.0\/storage_containers\/'\n\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='POST', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n\npprint(resp)\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"71_Get_Application_Container_UUID","attrs":{"exit_status":[],"script":"# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        71_Get_Application_Container_UUID\n# Type:        Set Variable\n# Variable:    container_uuid (string)  Used as a target for volume group create\n# Script Type: eScript\n# Description: Retrieve the UUID of the newly created storage container. Will be\n#              used as target to for the volume groups\n\npayload = {\n  \"kind\": \"container\",\n}\n\nsearch_string = \"@@{calm_application_name}@@\"\n\n\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/PrismGateway\/services\/rest\/v2.0\/storage_containers\/?search_string=%s' % search_string\n\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='GET', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n\nprint('container_uuid = %s' % (resp['entities'][0]['storage_container_uuid']))\n","eval_variables":["container_uuid"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"72_Create_sharedvg","attrs":{"script":"# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        72_Create_sharedvg\n# Type:        Execute\n# Script Type: eScript\n# Description: If vm 0, Create the shared volume group for the clustered\n#              application (i.e. for GPFS)\n\n# Skip if not VM 0\nif @@{calm_array_index}@@ != 0:\n  print(\"Not VM 0\")\n  exit(0)\n\n# Create json payload with volume group name and caracteristics\npayload = {\n  \"name\": \"@@{calm_application_name}@@_sharedvg\",\n  \"description\": \"Volume Group for sharedvg (GPFS)\",\n  \"enabled_authentications\": [\n    {\n      \"auth_type\": \"none\",\n      \"password\": \"\"\n    }\n  ],\n  \"flash_mode_enabled\": \"false\",\n  \"is_shared\": \"true\",\n  \"iscsi_target_prefix\": \"sharedvg\"\n}\n\n# Calculate vdisks size based on number of nodes in the cluster and required\n# capacity\nvdisk_mb = @@{sharedvg_gib}@@\/@@{nr_of_nodes}@@\/4*1024\n\n\n# Create vdisks for the volume group\ndisk_list = []\n\nfor x in range(@@{nr_of_nodes}@@*4):\n  disk_list.append(\n{\n  \"create_spec\": {\n    \"container_uuid\": \"@@{container_uuid}@@\",\n    \"size_mb\": (vdisk_mb)\n  }\n})\n\npayload[\"disk_list\"] = disk_list\n\n# Execute API call\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/api\/nutanix\/v2.0\/volume_groups\/'\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='POST', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n\npprint(resp)\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"73_Get_sharedvg_UUID","attrs":{"exit_status":[],"script":"# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        73_Get_sharedvg_UUID\n# Type:        Set Variable\n# Variable:    sharedvg_uuid (string)  Used as a target to attach the VM\n# Script Type: eScript\n# Description: Retrieve newly created volume group UUID\n\npayload = {}\n\nsearch_string = \"@@{calm_application_name}@@_sharedvg\"\n\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/PrismGateway\/services\/rest\/v1\/utils\/entities?entityType=volume_group&&searchString=%s&projection=id,volume_group_name' % search_string\n\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='GET', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n\nprint('sharedvg_uuid = %s' % (resp['entities'][0]['id']))\n","eval_variables":["sharedvg_uuid"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"74_Attach_sharedvg","attrs":{"script":"# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        74_Attach_sharedvg\n# Type:        Execute\n# Script Type: eScript\n# Description: Attach the shared volume group to the VM\n\npayload = {\n  \"vm_uuid\":\"@@{id}@@\"\n}\n\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/PrismGateway\/services\/rest\/v2.0\/volume_groups\/@@{sharedvg_uuid}@@\/attach'\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='POST', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"75_Get_list_of_sharedvg_vmdisks_uuid","attrs":{"exit_status":[],"script":"# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        75_Get_list_of_sharedvg_vmdisks_uuid\n# Type:        Set Variable\n# Variable:    sharedvg_vdisks (multiline string)\n# Script Type: eScript\n# Description: Retrieve the list of vdisks from the volume group.  This will be\n#              used when deleting the volume\n\n\n\npayload = {}\n\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/PrismGateway\/services\/rest\/v2.0\/volume_groups\/@@{sharedvg_uuid}@@'\n\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='GET', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n\nuuids= \"\"\nfor disk in resp['disk_list']:\n  uuids+=disk['vmdisk_uuid'].replace('-','_')+\" \"\n\nprint('sharedvg_vdisks = %s' % uuids)\n","eval_variables":["sharedvg_vdisks"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"80_Create_localvg_vg","attrs":{"script":"# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        80_Create_localvg_vg\n# Type:        Execute\n# Script Type: eScript\n# Description: Create a volume group local to the VM\n\nvgname = \"@@{name}@@\".replace(\"_\",\"-\")+\"-vg\"\npayload = {\n  \"description\": \"Volume Group for localvol\",\n  \"enabled_authentications\": [\n    {\n      \"auth_type\": \"none\",\n      \"password\": \"\"\n    }\n  ],\n  \"flash_mode_enabled\": \"false\",\n  \"is_shared\": \"false\",\n}\npayload['name'] = vgname\npayload['iscsi_target_prefix'] = vgname\n\ndisk_list = []\n\nvdisk_mb = @@{localvg_gib}@@\/4*1024\n\nfor x in range(4):\n  disk_list.append(\n{\n  \"create_spec\": {\n    \"container_uuid\": \"@@{container_uuid}@@\",\n    \"size_mb\": (vdisk_mb)\n  }\n})\n\npayload[\"disk_list\"] = disk_list\n\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/api\/nutanix\/v2.0\/volume_groups\/'\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='POST', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n\npprint(resp)\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"81_Get_localvg_UUID","attrs":{"exit_status":[],"script":"# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        81_Get_localvg_UUID\n# Type:        Set Variable\n# Variable:    localvg_uuid (string)   Used as a target to attach the VM\n# Description: Retrieve newly created local volume group UUID\n\n# Script Type: eScript\n\npayload = {}\n\nvgname = \"@@{name}@@\".replace(\"_\",\"-\")+\"-vg\"\n\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/PrismGateway\/services\/rest\/v1\/utils\/entities?entityType=volume_group&&searchString=%s&projection=id,volume_group_name' % vgname\n\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='GET', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n\nprint('localvg_uuid = %s' % (resp['entities'][0]['id']))\n","eval_variables":["localvg_uuid"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"82_Attach_localvg","attrs":{"script":"# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        82_Attach_localvg\n# Type:        Execute\n# Script Type: eScript\n# Description: Attach local volume group to the VM\n\npayload = {\n  \"vm_uuid\":\"@@{id}@@\"\n}\n\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/PrismGateway\/services\/rest\/v2.0\/volume_groups\/@@{localvg_uuid}@@\/attach'\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='POST', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"83_Get_list_of_localvg_vmdisks_uuid","attrs":{"exit_status":[],"script":"# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        83_Get_list_of_localvg_vmdisks_uuid\n# Type:        Set Variable\n# Variable:    localvg_vdisks (string)\n# Script Type: eScript\n# Description: Retrieve the list of vdisks for the volume group.\n\npayload = {}\n\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/PrismGateway\/services\/rest\/v2.0\/volume_groups\/@@{localvg_uuid}@@'\n\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='GET', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n\nuuids= \"\"\nfor disk in resp['disk_list']:\n  uuids+=disk['vmdisk_uuid'].replace('-','_')+\" \"\n\nprint('localvg_vdisks = %s' % uuids)\n","eval_variables":["localvg_vdisks"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"84_Create_localvg_filesystem","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        84_Create_localvg_filesystem\n# Type:        Execute\n# Script Type: Shell\n# Description: Create LVM volume group, logical volume and format as XFS\n# Script:\n\nset -ex\n\nlocalvg_vdisks=\"@@{localvg_vdisks}@@\"\n\n# Add one UUID per line\nfor uuid in $localvg_vdisks;do uuids=$\"$uuids$uuid\\n\";done\n\n# Remove trailing empty line\nuuids=${uuids::-2}\n\ndevs=$(lsblk -nodeps -no name,serial -PS \/dev\/sd* | grep -Ff <(echo -e $uuids) | cut -d\\\" -f2)\n\nfor dev in $devs\n  do pv=\"$pv\/dev\/$dev \"\ndone\n\nsudo vgcreate -s 1M localvg $pv\n\n# Create an LVM volume group\nsudo lvcreate -n localvol --extents 100%FREE -i 4 -I 1M localvg\n\n# Create XFS file system\nsudo mkfs.xfs -b size=4k -d sw=4,su=1m \/dev\/localvg\/localvol\n\n# Create Mount point\nsudo mkdir @@{localvol_mount_point}@@\n\n# Add mountpoint to fstab for mount at boot\nsudo cp \/etc\/fstab \/etc\/fstab.iscsi.bak -n\necho -e \"UUID=$(sudo blkid -o value -s UUID \/dev\/mapper\/localvg-localvol)\\t@@{localvol_mount_point}@@\\txfs\\tdefaults\\t0\\t0\" | sudo tee -a \/etc\/fstab\n# Try to mount new fstab entry\nsudo mount -a\n\n# Verify mounted file system\necho \"Verifying mounted filesystem:\"\nif [ $(df -h | grep -c \"localvol1\") == 1 ];then echo -e \"\\nFile successfully mounted:\\n\";df -h | grep \"localvol1\";echo -e \"\\n\\n\";else echo -e \"\\nThere seem to be a problem. Please check your config:\\n\\nMounted filesystems:\\n\\n$(df -h)\\nContent of fstab:\\n\\n$(cat \/etc\/fstab)\\n\";fi\n\n# cat fstab for troubleshooting purpose\ncat \/etc\/fstab\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"96_Add_hosts_to_known_hosts","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        96_Add_hosts_to_known_hosts\n# Type:        Execute\n# Script Type: Shell\n# Description: Add all nodes in VM0 known_hosts\n# Script:\n\necho -e \"$(ssh-keyscan $(hostname))\\n\" | ssh @@{calm_array_address[0]}@@ 'sudo tee -a \/root\/.ssh\/known_hosts;tee -a .ssh\/known_hosts'\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"97_Retrieve_Known_hosts_from_VM0","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        97_Retrieve_Known_hosts_from_VM0\n# Type:        Execute\n# Script Type: Shell\n# Description: Retrieve known_hosts from local user and root to this machine\n# Script:\n\nscp @@{calm_array_address[0]}@@:.ssh\/known_hosts .ssh\/\nsudo scp @@{calm_array_address[0]}@@:\/root\/.ssh\/known_hosts \/root\/.ssh\/\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"3dc45cf5_runbook","main_task_local_reference":{"kind":"app_task","name":"b759e7f6_dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"10_Detach_sharedvg"},{"kind":"app_task","name":"20_Detach_localvg"},{"kind":"app_task","name":"Wait for VG Detach"},{"kind":"app_task","name":"21_Delete_local_vg"},{"kind":"app_task","name":"30_Delete_sharedvg_vg"}],"name":"248929b9_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"10_Detach_sharedvg"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"20_Detach_localvg"}},{"from_task_reference":{"kind":"app_task","name":"21_Delete_local_vg"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"30_Delete_sharedvg_vg"}},{"from_task_reference":{"kind":"app_task","name":"20_Detach_localvg"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Wait for VG Detach"}},{"from_task_reference":{"kind":"app_task","name":"Wait for VG Detach"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"21_Delete_local_vg"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"10_Detach_sharedvg","attrs":{"script":"# Author:      Akim Sissaoui\n# Action:      Delete\n# Name:        10_Detach_sharedvg\n# Type:        Execute\n# Script Type: eScript\n# Description: Detach the shared volume group from the VM\n\npayload = {\n  \"vm_uuid\":\"@@{id}@@\"\n}\n\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/PrismGateway\/services\/rest\/v2.0\/volume_groups\/@@{sharedvg_uuid}@@\/detach'\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='POST', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\npprint(resp)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"20_Detach_localvg","attrs":{"script":"# Author:      Akim Sissaoui\n# Action:      Delete\n# Name:        20_Detach_localvg\n# Type:        Execute\n# Script Type: eScript\n# Description: Detach the local volume group from the  VM\n\npayload = {\n  \"vm_uuid\":\"@@{id}@@\"\n}\n\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/PrismGateway\/services\/rest\/v2.0\/volume_groups\/@@{localvg_uuid}@@\/detach'\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='POST', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\npprint(resp)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Wait for VG Detach","attrs":{"type":"","interval_secs":30},"timeout_secs":"0","type":"DELAY","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"21_Delete_local_vg","attrs":{"script":"# Author:      Akim Sissaoui\n# Action:      Delete\n# Name:        21_Delete_local_vg\n# Type:        Execute\n# Script Type: eScript\n# Description: Delete the local volume group: THIS WILL DESTROY ALL DATA ON THE \n#              VOLUME AND CANNOT BE UNDONE\n\npayload = {}\n\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/api\/nutanix\/v2.0\/volume_groups\/@@{localvg_uuid}@@'\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='GET', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n\n# Delete vdisks from Volume Group\n\nif 'disk_list' in resp:\n  for disk in resp['disk_list']:\n    payload = {}\n    api_url = 'https:\/\/@@{cluster_ip}@@:9440\/api\/nutanix\/v2.0\/volume_groups\/@@{localvg_uuid}@@\/disks\/%s' % disk['index']\n    headers = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\n    r = urlreq(api_url, verb='DELETE', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\n    if r.ok:\n      resp = json.loads(r.content)\n    else:\n      print \"Post request failed\", r.content\n      exit(1)\n\n# Delete volume group\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/api\/nutanix\/v2.0\/volume_groups\/@@{localvg_uuid}@@'\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='DELETE', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\npprint(resp)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"30_Delete_sharedvg_vg","attrs":{"script":"# Author:      Akim Sissaoui\n# Action:      Delete\n# Name:        30_Delete_sharedvg_vg\n# Type:        Execute\n# Script Type: eScript\n# Description: Delete the shared volume group: THIS WILL DESTROY ALL DATA ON THE\n#              VOLUME AND CANNOT BE UNDONE\n\nif @@{calm_array_index}@@ != 0:\n  print(\"Not VM 0\")\n  exit(0)\n\npayload = {}\n\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/api\/nutanix\/v2.0\/volume_groups\/@@{sharedvg_uuid}@@'\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='GET', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\n\n# Skip if the volume group is attached to VMs\nif 'attachment_list' in resp:\n  print(\"Volume group is attached to one or multiple VMs\")\n  exit(0)\n\n# Delete vdisks from Volume Group sharedvg\n\nif 'disk_list' in resp:\n  for disk in resp['disk_list']:\n    payload = {}\n    api_url = 'https:\/\/@@{cluster_ip}@@:9440\/api\/nutanix\/v2.0\/volume_groups\/@@{sharedvg_uuid}@@\/disks\/%s' % disk['index']\n    headers = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\n    r = urlreq(api_url, verb='DELETE', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\n    if r.ok:\n      resp = json.loads(r.content)\n    else:\n      print \"Post request failed\", r.content\n      exit(1)\n\n# Delete volume group\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/api\/nutanix\/v2.0\/volume_groups\/@@{sharedvg_uuid}@@'\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='DELETE', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\npprint(resp)\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"2b696d61_runbook","main_task_local_reference":{"kind":"app_task","name":"248929b9_dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"944f54bc_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"145a3f09_runbook","main_task_local_reference":{"kind":"app_task","name":"944f54bc_dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"443779ce_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"8d912688_runbook","main_task_local_reference":{"kind":"app_task","name":"443779ce_dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"5ce513c1_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"079484ff_runbook","main_task_local_reference":{"kind":"app_task","name":"5ce513c1_dag"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[],"name":"linscv","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"pc_ip","value":"","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"public_ip","value":"","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"container_uuid","value":"","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"cluster_ip","value":"","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"nr_of_nodes","value":"","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"sharedvg_uuid","value":"","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"sharedvg_vdisks","value":"","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"localvg_uuid","value":"","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"localvg_vdisks","value":"","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"sshgroup","value":"sshusers","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"regex":{"should_validate":false,"value":"^[\\d]*$"},"val_type":"INT","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"sharedvg_gib","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"regex":{"should_validate":false,"value":"^[\\d]*$"},"val_type":"INT","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"localvg_gib","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"localvol_mount_point","value":"\/var\/localvg","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"regex":{"should_validate":true,"value":"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})"},"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"SECRET","name":"rootpassword","value":"","label":"","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"Enter the URL to download the GPFS package","data_type":"BASE","type":"SECRET","name":"gpfs_package_url","value":"","label":"GPFS Package URL","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}}],"description":""}],"substrate_definition_list":[{"description":"","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"linvm"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"10_Validate_pc_credentials"}],"name":"ee6b1256_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"linvm"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"10_Validate_pc_credentials","attrs":{"expected_response_params":[{"status":"SUCCESS","code":200,"type":""},{"status":"FAILURE","code":401,"type":""}],"request_body":"","headers":[],"url":"https:\/\/localhost:9440\/api\/nutanix\/v3\/users\/me","response_paths":{},"retry_interval":1,"method":"GET","retry_count":1,"authentication":{"type":"basic_with_cred","credential_local_reference":{"kind":"app_credential","name":"pc_cred"}},"tls_verify":false,"content_type":"text\/html","connection_timeout":120,"type":"","proxy_type":""},"timeout_secs":"0","type":"HTTP","variable_list":[]}],"description":"","name":"e2009569_runbook","main_task_local_reference":{"kind":"app_task","name":"ee6b1256_dag"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"linvm"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"40_delete_Application_Container"}],"name":"02f2a2c5_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"linvm"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"40_delete_Application_Container","attrs":{"script":"# Author:      Akim Sissaoui\n# Action:      Post-delete\n# Name:        40_delete_Application_Container\n# Type:        Execute\n# Script Type: eScript\n# Description: Delete the container for the application. This cannot be done if\n#              it is not empty. It might fail often because of some background\n#              tasks. To be monitored.\n\nif @@{calm_array_index}@@ != 0:\n  print(\"Not VM 0\")\n  exit(0)\n\npayload = {}\n\napi_url = 'https:\/\/@@{cluster_ip}@@:9440\/PrismGateway\/services\/rest\/v2.0\/storage_containers\/@@{container_uuid}@@'\n\nheaders = {'Content-Type': 'application\/json',  'Accept':'application\/json'}\nr = urlreq(api_url, verb='DELETE', auth=\"BASIC\", user='@@{pe_cred.username}@@', passwd='@@{pe_cred.secret}@@', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\nelse:\n    print \"Post request failed\", r.content\n    exit(1)\npprint(resp)\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"c7a89524_runbook","main_task_local_reference":{"kind":"app_task","name":"02f2a2c5_dag"},"variable_list":[]},"name":"post_action_delete"}],"type":"AHV_VM","name":"linvm","readiness_probe":{"connection_type":"SSH","retries":"3","connection_protocol":"","connection_port":22,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"120","disable_readiness_probe":false,"login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"editables":{"create_spec":{"resources":{"nic_list":{},"num_vcpus_per_socket":true,"num_sockets":true,"serial_port_list":{},"memory_size_mib":true}}},"os_type":"Linux","create_spec":{"name":"@@{calm_application_name}@@-@@{calm_array_index}@@","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"85cc89a8-0eac-4ad7-942a-465ea288d1c0"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":12,"num_sockets":1,"gpu_list":[],"memory_size_mib":12288,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\nusers:\n  - name: @@{admin_cred.username}@@\n    ssh-authorized-keys:\n      - @@{ssh_key}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n"},"type":"","sysprep":null},"power_state":"ON","type":"","account_uuid":"c51e9662-23ce-4928-869f-3eb4a63aaaef","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"app_package","type":"","name":"CentOS 7 x86 64 GenericCloud 1907","uuid":"82815a2f-6c86-49f6-8a55-34829efddfd0"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"categories":""},"variable_list":[]}],"credential_definition_list":[{"username":"akim@ntnxlab.ch","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"pc_cred","editables":{"username":true,"secret":true}},{"username":"centos","description":"","type":"KEY","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"admin_cred","editables":{"username":true,"secret":true}},{"username":"admin","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"pe_cred","editables":{"username":true,"secret":true}}],"package_definition_list":[{"description":"CentOS-7-x86_64-GenericCloud","action_list":[],"type":"SUBSTRATE_IMAGE","service_local_reference_list":[],"name":"CentOS 7 x86 64 GenericCloud 1907","version":"","options":{"type":"","name":"CentOS-7-x86_64-GenericCloud-1907","resources":{"image_type":"DISK_IMAGE","checksum":{"checksum_algorithm":"","type":"","checksum_value":""},"source_uri":"https:\/\/cloud.centos.org\/centos\/7\/images\/CentOS-7-x86_64-GenericCloud-1907.qcow2","version":{"product_version":"1907","type":"","product_name":"CentIOS"},"architecture":"X86_64","type":""},"description":""},"variable_list":[]},{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"linscv"}],"name":"linpkg","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"linpkg"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"1_Install_various_packages"},{"kind":"app_task","name":"10_Install_development_packages"},{"kind":"app_task","name":"20_Upgrade_package_and_reboot_vm"},{"kind":"app_task","name":"Wait for VM"}],"name":"b243eecf_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"1_Install_various_packages"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"10_Install_development_packages"}},{"from_task_reference":{"kind":"app_task","name":"10_Install_development_packages"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"20_Upgrade_package_and_reboot_vm"}},{"from_task_reference":{"kind":"app_task","name":"20_Upgrade_package_and_reboot_vm"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Wait for VM"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"1_Install_various_packages","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Create\n# Name:        1_Install_various_packages\n# Type:        Execute\n# Script Type: Shell\n# Description: Installation of any standard packages required for the use case\n\n# Script:\n\nset -e\n\nsudo yum install epel-release -y\n\nsudo yum install nano htop samba-client wget lshw lvm2 inotify-tools lsscsi mdadm -y\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"10_Install_development_packages","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Packages Install\n# Name:        10_Install_development_packages\n# Type:        Execute\n# Script Type: Shell\n# Description: Install headers and compilation tools\n\n# Script:\n\nset -ex\n\nsudo yum install cpp gcc gcc-c++ kernel-headers kernel-devel -y\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"20_Upgrade_package_and_reboot_vm","attrs":{"exit_status":[],"script":"#!\/usr\/bin\/env bash\n\n# Author:      Akim Sissaoui\n# Action:      Packages Install\n# Name:        20_Upgrade_package_and_reboot_vm\n# Type:        Execute\n# Script Type: Shell\n# Description: Perform a package upgrade (yum) and reboot.\n#              Requires 30 secondes Delay added to wait for VM to reboot\n\n# Script:\n\nsudo yum update -y\n\nsudo -b reboot\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"admin_cred"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"linscv"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Wait for VM","attrs":{"type":"","interval_secs":30},"timeout_secs":"0","type":"DELAY","variable_list":[]}],"description":"","name":"c12228df_runbook","main_task_local_reference":{"kind":"app_task","name":"b243eecf_dag"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"linpkg"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ef870051_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"604c1c94_runbook","main_task_local_reference":{"kind":"app_task","name":"ef870051_dag"},"variable_list":[]}},"variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"name":"91f40504_deployment","min_replicas":"2","default_replicas":"4","depends_on_list":[],"editables":{"default_replicas":true,"max_replicas":true},"published_service_local_reference_list":[],"max_replicas":"12","package_local_reference_list":[{"kind":"app_package","name":"linpkg"}],"substrate_local_reference":{"kind":"app_substrate","name":"linvm"},"variable_list":[],"description":""}],"environment_reference_list":[],"description":"","action_list":[{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Add one node"}],"name":"10cf55f4_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"91f40504_deployment"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Add one node","attrs":{"scaling_count":"1","type":"","scaling_type":"SCALEOUT"},"timeout_secs":"0","type":"SCALING","variable_list":[]}],"description":"","name":"a673924e_runbook","main_task_local_reference":{"kind":"app_task","name":"10cf55f4_dag"},"variable_list":[]},"name":"Add one node"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Remove one node"}],"name":"54cc61cc_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"91f40504_deployment"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Remove one node","attrs":{"scaling_count":"1","type":"","scaling_type":"SCALEIN"},"timeout_secs":"0","type":"SCALING","variable_list":[]}],"description":"","name":"5ea4f405_runbook","main_task_local_reference":{"kind":"app_task","name":"54cc61cc_dag"},"variable_list":[]},"name":"Remove last node"}],"name":"Default","variable_list":[{"regex":{"should_validate":false,"value":"^.*$"},"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"ssh_key","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}]}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"admin_cred"},"type":"USER"},"name":"Linux-storage-cluster"},"api_version":"3.0","metadata":{"last_update_time":"1616626198613397","kind":"blueprint","spec_version":3,"creation_time":"1616625905552105","name":"Linux-storage-cluster"}}